<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Daniel Tobias - expository</title><link href="https://uberyb.github.io/" rel="alternate"></link><link href="https://uberyb.github.io/feeds/expository.atom.xml" rel="self"></link><id>https://uberyb.github.io/</id><updated>2023-02-05T22:15:22-08:00</updated><entry><title>Lecture Series (TQC group) - Braid relations, matrix representations, and the Temperley Lieb algebra</title><link href="https://uberyb.github.io/lecture-series-tqc-group-braid-relations-matrix-representations-and-the-temperley-lieb-algebra.html" rel="alternate"></link><published>2023-02-05T22:15:22-08:00</published><updated>2023-02-05T22:15:22-08:00</updated><author><name>Daniel Tobias</name></author><id>tag:uberyb.github.io,2023-02-05:/lecture-series-tqc-group-braid-relations-matrix-representations-and-the-temperley-lieb-algebra.html</id><summary type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This is ultimately part of a lecture series given in the topological quantum
computing reading group. The notes in the past were either beamer slides or some
handwritten notes, but I decided to give this format a try since it makes
everything easier. Readers should remember these notes are â€¦&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This is ultimately part of a lecture series given in the topological quantum
computing reading group. The notes in the past were either beamer slides or some
handwritten notes, but I decided to give this format a try since it makes
everything easier. Readers should remember these notes are not original to me and
are based on &lt;a href="https://math.berkeley.edu/~vfr/jonesakl.pdf"&gt;Jones's notes&lt;/a&gt;,
various Wikipedia articles, and on occasion, other resources.  &lt;/p&gt;
&lt;p&gt;For a brief recap, we previously defined knots, knot invariance, and computed some examples of
knot polynomials. In the lecture before this one, we covered the braid group and
how links arise as closures of braids by a theorem of Alexander's.  &lt;/p&gt;
&lt;h2&gt;Braid relations (little review)&lt;/h2&gt;
&lt;p&gt;There is a useful braid that we defined, &lt;span class="math"&gt;\(\sigma_i\)&lt;/span&gt; which can be defined with
the braid diagram:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Brain diagram" src="https://uberyb.github.io/images/knots/knot2-4.png"&gt;&lt;/p&gt;
&lt;p&gt;Notice that if we forget the crossing structure of the braid and decide to see
braids as elements of &lt;span class="math"&gt;\(S_n\)&lt;/span&gt; then &lt;span class="math"&gt;\(\sigma_i\)&lt;/span&gt; really is just a transposition
between the &lt;span class="math"&gt;\(i\)&lt;/span&gt;th and &lt;span class="math"&gt;\(i+1\)&lt;/span&gt;th positions. It turns out that there are relations
between the &lt;span class="math"&gt;\(\sigma_i \in B_n\)&lt;/span&gt; (&lt;span class="math"&gt;\(B_n\)&lt;/span&gt; is the braid group on &lt;span class="math"&gt;\(n\)&lt;/span&gt; strings) that
allow us to write down a presentation for &lt;span class="math"&gt;\(B_n\)&lt;/span&gt;.  &lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
&amp;amp;\sigma_i \sigma_j = \sigma_j \sigma_i \quad \text{if } |i-j| \ge 2\\
&amp;amp;\sigma_i \sigma_{i+1} \sigma_i = \sigma_{i+1} \sigma_i \sigma_{i+1}
\end{align*}
$$&lt;/div&gt;
&lt;p&gt;The first equation is the easier one to see. If we were to draw the braid
diagram you can see that indeed elements commute so long as they are
sufficiently far away from each other. This is just because a transposition
cannot interact with another transposition of unrelated elements. For an
analogy, consider how transpositions &lt;span class="math"&gt;\(\tau_1, \tau_2 \in S_n\)&lt;/span&gt; commute with each
other so long their non-trivial orbits don't intersect.  &lt;/p&gt;
&lt;p&gt;The second fact is a little more difficult to see but follow from the following
picture:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Braid relations" src="https://uberyb.github.io/images/knots/knot2-3.png"&gt;  &lt;/p&gt;
&lt;p&gt;If we want to look at this like braid concatenation then we have something like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Braid relations" src="https://uberyb.github.io/images/knots/knot2-1.png"&gt;&lt;br&gt;
&lt;img alt="Braid relations" src="{ststic}/images/knots/knot2-2.png"&gt;  &lt;/p&gt;
&lt;p&gt;A little hard to visualize what's going on, but hopefully you are convinced. Now
that we know these relations, we have a presentation for the braid group&lt;/p&gt;
&lt;div class="math"&gt;$$B_n = \langle \sigma_1,...,\sigma_{n-1}\mid \sigma_i\sigma_{i+1}\sigma_i =
\sigma_{i+1}\sigma_i\sigma_{i+1},~\sigma_i\sigma_j = \sigma_j \sigma_i$$&lt;/div&gt;
&lt;p&gt;For the first set of relations remember that &lt;span class="math"&gt;\(1 \le i \le n-2\)&lt;/span&gt; and for the second set of relations remember that &lt;span class="math"&gt;\(|i-j|\ge 2\)&lt;/span&gt;!  &lt;/p&gt;
&lt;p&gt;The braid relations give us hope for minding a representation of &lt;span class="math"&gt;\(B_n\)&lt;/span&gt;. We can
construct a family of matrices satisfying the braid relations. One such family
is:&lt;/p&gt;
&lt;div class="math"&gt;$$\sigma_i \mapsto \begin{pmatrix}I_{i-1} &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\\ 0 &amp;amp; 1-t &amp;amp; t &amp;amp; 0 \\ 0 &amp;amp; 1
    &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; I_{n-i-1}\end{pmatrix}$$&lt;/div&gt;
&lt;p&gt;which is called the "unreduced Burau representation". If we quotient by the 1-dim
invariant subspace then we get the "reduced Burau representation". The reduced
Burau representation (for &lt;span class="math"&gt;\(n \ge 3\)&lt;/span&gt;) is given by:&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align*}
&amp;amp;\sigma_1 \mapsto \begin{pmatrix}-t &amp;amp; 1 &amp;amp; 0 \\ 0 &amp;amp; 1 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; I_{n-3}\end{pmatrix} \\
&amp;amp;\sigma_i \mapsto \begin{pmatrix}I_{n-2} &amp;amp; 0 &amp;amp; 0 &amp;amp;0 &amp;amp;0\\ 
0 &amp;amp; 1 &amp;amp; 0 &amp;amp;0 &amp;amp; 0\\
0 &amp;amp; t&amp;amp; -t &amp;amp; 1 &amp;amp; 0 \\ 
0 &amp;amp;0 &amp;amp;0 &amp;amp; 1 &amp;amp; 0 \\ 
0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; I_{n-i-2}\end{pmatrix}\\
&amp;amp;\sigma_{n-1} \mapsto \begin{pmatrix}I_{n-3} &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 1 &amp;amp; 0 \\ 0 &amp;amp; t &amp;amp; -t\end{pmatrix}
\end{align*}$$&lt;/div&gt;
&lt;p&gt;We should see the representation as a homomorphism &lt;span class="math"&gt;\(\varphi: B_n \to GL(\mathbb{Z}[t,
t^{-1}])\)&lt;/span&gt;. This homomorphism is injective for &lt;span class="math"&gt;\(n \le 3\)&lt;/span&gt; and non-injective for &lt;span class="math"&gt;\(n
\ge 5\)&lt;/span&gt;, faithfulness when &lt;span class="math"&gt;\(n=4\)&lt;/span&gt; is a major open question.  &lt;/p&gt;
&lt;h2&gt;Temperley Lieb algebra&lt;/h2&gt;
&lt;p&gt;Vaughan Jones discovered the Jones polynomial while studying the Temperley Lieb
algebra. It was originally encountered by Temperley and Lieb in their work on
statistical mechanics, but ended up being related to integrable models, knot
theory and the braid group, quantum groups and subfactors of von Neumann
algebras (according to Wikipedia). Of course, we bring it up now because of its
relationship with the braid group.  &lt;/p&gt;
&lt;h3&gt;First definition of Temperley Lieb algebra&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Define.&lt;/strong&gt; For &lt;span class="math"&gt;\(\tau \in \mathbb{C}\)&lt;/span&gt;, &lt;span class="math"&gt;\(TL_{n+1}(\tau)\)&lt;/span&gt; is the associative unital
&lt;span class="math"&gt;\(*\)&lt;/span&gt;-algebra with generators &lt;span class="math"&gt;\(e_1, e_2,...,e_n\)&lt;/span&gt; and relations  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(e_{i}^2 = e_i, e_i^*\)&lt;/span&gt;  &lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(e_i e_j = e_j e_i\)&lt;/span&gt; for &lt;span class="math"&gt;\(|i-j| \ge 2\)&lt;/span&gt;  &lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(e_ie_{i\pm 1}e_i = \tau e_i\)&lt;/span&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As an exercise, we can attempt to divine the structure of &lt;span class="math"&gt;\(TL_{n}\)&lt;/span&gt;. It will be
useful to know the following two facts:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cartan's criteria for semisimplicity&lt;/strong&gt;. A finite dimensional Lie algebra
     over a characteristic 0 field is semisimple if and only if the Killing form
     is non-degenerate.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Wedderburn-Artin theorem&lt;/strong&gt;. A finite dimensional semisimple algebra over
     &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt; is isomorphic to a direct sum of matrix algebras (possibly of
     varying sizes) over &lt;span class="math"&gt;\(\mathbb{C}\)&lt;/span&gt;.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Killing form is an inner product on the Lie algebra. It is
defined as &lt;/p&gt;
&lt;div class="math"&gt;$$B(X,Y) = \text{tr}(\text{ad}(X)\text{ad}(Y))$$&lt;/div&gt;
&lt;p&gt;
&lt;span class="math"&gt;\(\text{ad}(X)\)&lt;/span&gt; is the adjoint endomorphism on the Lie algebra, defined like
&lt;span class="math"&gt;\(\text{ad}(X)(Y) = [X,Y]\)&lt;/span&gt; (&lt;span class="math"&gt;\([\cdot]\)&lt;/span&gt; is the Lie bracket). We can assume that
because &lt;span class="math"&gt;\(TL_n\)&lt;/span&gt; depends on a parameter, it's semisimple for all but a finite
number of &lt;span class="math"&gt;\(\tau\)&lt;/span&gt; provided we can find a single &lt;span class="math"&gt;\(\tau\)&lt;/span&gt; for which &lt;span class="math"&gt;\(TL_n\)&lt;/span&gt; is
semisimple. Importantly, we can show that &lt;span class="math"&gt;\(\tau = \frac{1}{4}\)&lt;/span&gt; makes &lt;span class="math"&gt;\(TL_n\)&lt;/span&gt;
semisimple. We now understand enough about the structure of these algebras to
work out a few examples.&lt;/p&gt;
&lt;div class="math"&gt;$$
\begin{align*}
&amp;amp;TL_1 \quad \text{} \quad &amp;amp;\cong \mathbb{C}\\
&amp;amp;TL_2 \quad \text{some reason here}\quad &amp;amp;\cong \mathbb{C} \oplus \mathbb{C}
\end{align*}
$$&lt;/div&gt;
&lt;!--- 
https://gdz.sub.uni-goettingen.de/id/PPN266833020_0219?tify=%7B%22pages%22%3A%5B545%5D%2C%22pan%22%3A%7B%22x%22%3A0.467%2C%22y%22%3A0.991%7D%2C%22view%22%3A%22info%22%2C%22zoom%22%3A0.529%7D
--&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="expository"></category></entry><entry><title>Some encrypted page</title><link href="https://uberyb.github.io/some-encrypted-page.html" rel="alternate"></link><published>2023-02-01T18:43:08-08:00</published><updated>2023-02-01T18:43:08-08:00</updated><author><name>Daniel Tobias</name></author><id>tag:uberyb.github.io,2023-02-01:/some-encrypted-page.html</id><content type="html">&lt;p&gt;dog dog dog&lt;/p&gt;</content><category term="expository"></category></entry><entry><title>Kauffman &amp; Jones polynomial of Hopf link</title><link href="https://uberyb.github.io/kauffman-jones-polynomial-of-hopf-link.html" rel="alternate"></link><published>2023-01-18T12:43:14-08:00</published><updated>2023-01-18T12:43:14-08:00</updated><author><name>Daniel Tobias</name></author><id>tag:uberyb.github.io,2023-01-18:/kauffman-jones-polynomial-of-hopf-link.html</id><summary type="html">&lt;p&gt;This exercise came out of a series of lectures given for the &lt;a href="https://uberyb.github.io/topological-quantum-field-theory.html"&gt;Topological QFTs&lt;/a&gt; reading group. Really the lectures began as a way to catch up on elementary knot theory so that the group could further understand the work of &lt;a href="https://math.berkeley.edu/~vfr/"&gt;Vaughan Jones&lt;/a&gt;. This post is not meant to be tremendously â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;This exercise came out of a series of lectures given for the &lt;a href="https://uberyb.github.io/topological-quantum-field-theory.html"&gt;Topological QFTs&lt;/a&gt; reading group. Really the lectures began as a way to catch up on elementary knot theory so that the group could further understand the work of &lt;a href="https://math.berkeley.edu/~vfr/"&gt;Vaughan Jones&lt;/a&gt;. This post is not meant to be tremendously theoretical, but meant to serve as a gentle reminder about how one does these sorts of computations.  &lt;/p&gt;
&lt;p&gt;&lt;u&gt;Define.&lt;/u&gt; A knot is a closed curve seen as a subset &lt;span class="math"&gt;\(K \subset S^3\)&lt;/span&gt; which
should be interpreted as &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt; plus a point at infinity.  &lt;/p&gt;
&lt;p&gt;There are reasons for why the point at infinity is useful (although it is not
relevant to the current task) and I believe containing the knot in &lt;span class="math"&gt;\(S^3\)&lt;/span&gt; is done
so that we can fit the whole knot in a compact space. There are some operations
on knots, but all we need here is to understand that knots can be &lt;em&gt;linked&lt;/em&gt;. A
link &lt;span class="math"&gt;\(L\)&lt;/span&gt; is a collection of non-intersecting knots that are "linked" together. A
good example of this is the Borromean link  &lt;/p&gt;
&lt;p&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/54/Borromean_Rings_Illusion_%28transparent%29.png/1024px-Borromean_Rings_Illusion_%28transparent%29.png" alt="Borromean Rings" width="200" /&gt;&lt;/p&gt;
&lt;p&gt;Each ring here (which is really just a circle) is called an "unknot". Observe
that the removal of any unknot from the picture would totally undo the link.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Hopf link" src="https://uberyb.github.io/images/knots/1.png"&gt;&lt;br&gt;
&lt;em&gt;Hopf link&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A subtle detail of my drawing of the Hopf link: at the crossing there is
one completely solid line intersection a "broken" line. The broken line is to be
interpreted as the string which passes under the other string in the crossing.  &lt;/p&gt;
&lt;p&gt;One goal of knot theory is to classify knots. One way we can do this is to
capture a knot with algebraic information. In the case of the Jones polynomial
one must use a Laurent polynomial. First I'll start with a more general
polynomial for knots known as the &lt;a href="https://en.wikipedia.org/wiki/Bracket_polynomial"&gt;Kauffman bracket&lt;/a&gt; which is most easily defined inductively. For any link &lt;span class="math"&gt;\(L\)&lt;/span&gt; the Kauffman bracket &lt;span class="math"&gt;\(\langle L \rangle\)&lt;/span&gt; is&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\langle L \rangle = 1\)&lt;/span&gt; if &lt;span class="math"&gt;\(L\)&lt;/span&gt; is the unknot.  &lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\langle \times \rangle = A \langle || \rangle + A^{-1} \langle = \rangle\)&lt;/span&gt;  &lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\langle U \sqcup L = (-A^2 - A^{-2})\langle L \rangle\)&lt;/span&gt; (where &lt;span class="math"&gt;\(U\)&lt;/span&gt; is the
     unknot and &lt;span class="math"&gt;\(L\)&lt;/span&gt; is some link)  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Rule 2 will require further explanation. The symbols &lt;span class="math"&gt;\(\times\)&lt;/span&gt;, &lt;span class="math"&gt;\(||\)&lt;/span&gt;, and &lt;span class="math"&gt;\(=\)&lt;/span&gt; are
meant to be seen as physical string. &lt;span class="math"&gt;\(\times\)&lt;/span&gt; implies there is a crossing, &lt;span class="math"&gt;\(||\)&lt;/span&gt;
implies the strings are vertical and parallel whereas &lt;span class="math"&gt;\(=\)&lt;/span&gt; implies the strings
are horizontal and parallel. The idea is to "smooth" or reduce knot crossings
into the sum of these two components. &lt;/p&gt;
&lt;p&gt;So we can decompose the Hopf link using a recursive approach in a sort of tree
structure such as:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Kauffman bracket of the Hopf link" src="https://uberyb.github.io/images/knots/2.png"&gt;  &lt;/p&gt;
&lt;p&gt;The diagram starts with the Hopf link and then we apply a single smoothing to a single crossing. I label the edges of my graph by the coefficient attached to the smoothing given by rule 2. The bottom middle two nodes of the tree are just unknots, and so their Kauffman brackets
are constant 1. Now the bottom left and bottom right nodes are regular isotopies of another (meaning one can be transformed to the other by &lt;a href="https://en.wikipedia.org/wiki/Reidemeister_move"&gt;Reidemeister move's&lt;/a&gt; of type II and III). All that remains is to compute the Kauffman bracket of the double unkot.  &lt;/p&gt;
&lt;p&gt;By rule (1) a single unknot &lt;span class="math"&gt;\(U\)&lt;/span&gt; has bracket 1. By rule 3 &lt;span class="math"&gt;\(\langle U \sqcup U \rangle = (-A^2 - A^{-2})\langle U \rangle = (-A^2 - A^{-2})\)&lt;/span&gt;. Meaning if we sum our components we get &lt;/p&gt;
&lt;div class="math"&gt;$$A^2(-A^2-A^{-2})+1+1+A^{-2}(-A^2 -A^{-2}) = -A^4 - A^{-4}$$&lt;/div&gt;
&lt;p&gt;Something else you could do is start with a sum of all possible smoothings.
Suppose the unknot's polynomial is &lt;span class="math"&gt;\(-A^2 - A^{-2}\)&lt;/span&gt; then instead of a recursive
tree you could have a list of all possible smoothings (where we smooth all
crossings at the same time)  &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://uberyb.github.io/images/knots/3.png"&gt;&lt;/p&gt;
&lt;p&gt;Notice the sum here is &lt;span class="math"&gt;\((A^2 + A^{-2})(A^4 + A^{-4})\)&lt;/span&gt; which has an additional
factor on our answer from the recursive approach. Remembering that we "scaled"
the unknots polynomial, we can renormalize by dividing out &lt;span class="math"&gt;\((-A^2 - A^{-2})\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now if &lt;span class="math"&gt;\(A^4 = t\)&lt;/span&gt; this is Jones polynomial of the Hopf link (in fact
orienting the link and multiplying the bracket by a factor &lt;span class="math"&gt;\(A^{-3wr(L)}\)&lt;/span&gt; will
get you to the Jones polynomial).&lt;/p&gt;
&lt;p&gt;A question that I spent some time thinking about is how to motivate &lt;span class="math"&gt;\(-A^2 - A^{-2}\)&lt;/span&gt; as the choice for the unknot's bracket. This expression is obviously not very random. For one, it has the nice property that &lt;span class="math"&gt;\(\langle \bigsqcup U_n \rangle = (-A^2 - A^{-2})^n\)&lt;/span&gt; where &lt;span class="math"&gt;\(U_n\)&lt;/span&gt; is a length &lt;span class="math"&gt;\(n\)&lt;/span&gt; sequence of unknots. It also happens to show up in the invariance of the Kauffman bracket under the Reidemeister type II move which Sanchayan Dutta recently &lt;a href="https://sanchayandutta.wordpress.com/2023/01/09/the-strange-third-rule-of-kauffmans-bracket/"&gt;wrote about&lt;/a&gt;. Namely, it is the constant &lt;span class="math"&gt;\(\delta\)&lt;/span&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="expository"></category></entry><entry><title>Sample</title><link href="https://uberyb.github.io/sample.html" rel="alternate"></link><published>2022-09-21T19:19:25-07:00</published><updated>2022-09-21T19:19:25-07:00</updated><author><name>Daniel Tobias</name></author><id>tag:uberyb.github.io,2022-09-21:/sample.html</id><summary type="html">&lt;p&gt;test&lt;/p&gt;
&lt;div class="math"&gt;$$\oint_{\gamma}f(z) dz = 0$$&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript' â€¦&lt;/script&gt;</summary><content type="html">&lt;p&gt;test&lt;/p&gt;
&lt;div class="math"&gt;$$\oint_{\gamma}f(z) dz = 0$$&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="expository"></category></entry></feed>